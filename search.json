[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Infinitely learn",
    "section": "",
    "text": "20 Days of Exploration: What I’ve Been Up To\n\n\n\n\n\n\nexplanation\n\n\n\nStepping into the world of algorithmic trading\n\n\n\n\n\nSep 26, 2024\n\n\nTris\n\n\n\n\n\n\n\n\n\n\n\n\nTo Infinity and Beyond: My Deep Learning Journey\n\n\n\n\n\n\nexplanation\n\n\n\nFrom Techno to Tensorflow\n\n\n\n\n\nSep 5, 2024\n\n\nTris\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "",
    "text": "Hi, I’m Tris, and welcome to my blog - Infinitely Learn. My background is nothing to do with artificial intelligence, deep learning, or even computer or data science. At uni I studied a BSc in Audio & Recording Technology.\nOne day in the studio we had a guest hardcore techno producer come in to do a workshop. In this class we’d been used to doing things like learning / experimenting with mic technique, acoustics, or recording local indie or jazz bands. This producer asked us to approach problems where we had to start thinking outside the box. Tasks like recreating the US national anthem, but in a hardcore techno style. Usually we aimed to record the cleanest, most detailed and transparent sound possible. For this task though I started to think of any possible way to distort, crush, and break the sound and mess it up as much as possible, aiming to recreate a hardcore kind of sound and texture according to the brief.\nAfter the session, he asked me to stay behind and said, “Whatever you want to do, you can put your mind to it, and you can do it.” That’s stuck with me ever since. It’s something I remind myself of—if you’re determined enough, willing to adapt and apply yourself creatively, with enough time and practice, you can learn to do anything!\nI think this applies to computational learning as well. Given enough time, training, and creativity in how you approach problems, anything is possible in the realm of artificial intelligence and machine learning."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#background",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#background",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "",
    "text": "Hi, I’m Tris, and welcome to my blog - Infinitely Learn. My background is nothing to do with artificial intelligence, deep learning, or even computer or data science. At uni I studied a BSc in Audio & Recording Technology.\nOne day in the studio we had a guest hardcore techno producer come in to do a workshop. In this class we’d been used to doing things like learning / experimenting with mic technique, acoustics, or recording local indie or jazz bands. This producer asked us to approach problems where we had to start thinking outside the box. Tasks like recreating the US national anthem, but in a hardcore techno style. Usually we aimed to record the cleanest, most detailed and transparent sound possible. For this task though I started to think of any possible way to distort, crush, and break the sound and mess it up as much as possible, aiming to recreate a hardcore kind of sound and texture according to the brief.\nAfter the session, he asked me to stay behind and said, “Whatever you want to do, you can put your mind to it, and you can do it.” That’s stuck with me ever since. It’s something I remind myself of—if you’re determined enough, willing to adapt and apply yourself creatively, with enough time and practice, you can learn to do anything!\nI think this applies to computational learning as well. Given enough time, training, and creativity in how you approach problems, anything is possible in the realm of artificial intelligence and machine learning."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#how-i-became-interested-in-artificial-intelligence",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#how-i-became-interested-in-artificial-intelligence",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "How I Became Interested in Artificial Intelligence",
    "text": "How I Became Interested in Artificial Intelligence\nA few years back, I got curious about fintech and started reading up on it. That’s where I first learned about AI and the massive impact it could have on the economy and society—what they call the Fourth Industrial Revolution. The more I read, the more excited I got about the potential of machine learning and deep learning.\nDuring the COVID lockdowns, I had some time on my hands, so I started experimenting with creating various algorithmic trading strategies to backtest. I managed to backtest some strategies that did well for certain periods, but when I tested them over other periods, they completely failed. I realised that algorithmic trading isn’t just about building a perfect model; it’s about understanding the current market conditions and choosing the right algorithm, and adapting constantly. Plus, it made me aware of the whole challenge of overfitting and the importance of understanding how to avoid it while training machine learning models.\nThis has all been a passion project for me. I’m really excited about what I’ve been learning recently in the fields of deep learning, reinforcement learning, and quantitative finance, and what lies ahead. I’m keen to keep expanding my knowledge and getting more hands-on experience, and learn how to apply it to real problems."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#why-im-starting-this-blog",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#why-im-starting-this-blog",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "Why I’m Starting This Blog",
    "text": "Why I’m Starting This Blog\nI realised the importance of recording and sharing what you learn to reinforce your understanding and accelerate learning, especially in areas like deep learning and machine learning that can become complex. I’m usually the type of person who loves to dive right into things without stopping to take proper notes. But many times, I have seen how much I learned—then forgot. “You don’t use it, you lose it!” This blog is in part my attempt to address that, helping me document my learning journey to refer back to and build upon.\nAnother reason for this blog is to share my learning with others. Maybe someone out there will find my experiences and insights in machine learning, deep learning, or quantitative finance useful or interesting. It also opens up opportunities for feedback, corrections, or discussions that can further enhance understanding, especially in a field as rapidly evolving as artificial intelligence."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#the-concept-to-infinitely-learn",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#the-concept-to-infinitely-learn",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "The Concept to Infinitely Learn",
    "text": "The Concept to Infinitely Learn\nThe idea to “infinitely learn” came from several sources. One influence was fast.ai’s Jeremy Howard who said he spends a portion of every day learning something new, and the book Atomic Habits by James Clear, which emphasises the power of small, consistent actions and continuous learning over time. The main concept is that even if you don’t feel like you’re making significant progress day by day, you focus on the process not the goal and keep learning by habit and moving forward bit by bit, and the consistent small efforts add up and eventually lead to substantial growth in understanding complex topics like neural networks and data science."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#my-learning-experiences-so-far",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#my-learning-experiences-so-far",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "My Learning Experiences So Far",
    "text": "My Learning Experiences So Far\nLast year, I discovered the Harvard CS50x course and dived in. I watched all the lectures at 2x speed, did a few of the assignments, but didn’t take many notes. I did this with several other courses and books, including the Fast.ai course, which focuses on deep learning and neural networks. My goal was to cover as much ground as quickly as possible and grasp the overall concepts in computer science, machine learning, and deep learning. Now, to truly understand these concepts and apply them effectively, I’m trying to adopt a more thorough and reflective approach. That’s where this blog comes in—as a study tool to help me engage more deeply with the material, from basic algorithms to advanced reinforcement learning techniques."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#what-to-expect-from-this-blog",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#what-to-expect-from-this-blog",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "What to Expect from This Blog",
    "text": "What to Expect from This Blog\nI’m expecting to explore several key areas in this blog, including:\n\nDeep Learning: Revisiting the Fast.ai course in greater depth, covering topics like neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs).\nMachine Learning: Delving into various algorithms, models, and practical applications to build a strong foundation in data science and AI.\nReinforcement Learning: Exploring this fascinating area of artificial intelligence, understanding key concepts, algorithms, and real-world applications in computational learning.\nQuantitative Finance: More recently, I’ve taken an interest in this field. The world of ‘quants’ fascinates me, as it combines advanced mathematics, computer science, and finance. I’ll be sharing my journey into this world and how it intersects with AI and machine learning.\n\nThe content will vary—sometimes I might post how-to guides or tutorials as I learn new processes or techniques in machine learning or reinforcement learning. Other times, I’ll reflect on personal insights and challenges I’ve faced in my AI learning journey. I don’t have a fixed plan for how this blog will evolve, and that’s part of what makes this journey into artificial intelligence and computational learning exciting. Sometimes, you just have to start without having an exact goal and see where it leads."
  },
  {
    "objectID": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#join-me-on-this-journey",
    "href": "posts/2024-09-05-my-journey-into-deep-learning-and-beyond/index.html#join-me-on-this-journey",
    "title": "To Infinity and Beyond: My Deep Learning Journey",
    "section": "Join Me on This Journey",
    "text": "Join Me on This Journey\nI’m excited to embark on this journey in AI, deep learning, quantitative finance, and beyond to a new level and share it with anyone who’s interested. If you’d like to follow along, you can find me on X. I’d love to hear from you and learn together about the fascinating world of machine learning, deep learning, and artificial intelligence.\nThank you for joining me on this journey.\n\nTo infinity and beyond! ♾️"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "20 Days of Exploration: What I’ve Been Up To\n\n\n\n\n\n\n\n\nSep 26, 2024\n\n\n\n\n\n\n\nTo Infinity and Beyond: My Deep Learning Journey\n\n\n\n\n\n\n\n\nSep 5, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "",
    "text": "Since my first post, I have to admit—things didn’t go exactly as planned. Initially, I intended to steadily work through tutorials, books, and courses, documenting every step of the way here on this blog. Well, I kept up with the learning, but the documenting… not so much!"
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#reinforcement-learning",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#reinforcement-learning",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "Reinforcement Learning",
    "text": "Reinforcement Learning\nMy primary goal was to finish the first three chapters of Reinforcement Learning: An Introduction by Richard S. Sutton and Andrew G. Barto. For those who aren’t familiar, it’s a foundational book in the field—a go-to resource for understanding reinforcement learning (RL) concepts. So, I started there, and it has been eye-opening.\n\nChapter 1: An Overview of Reinforcement Learning\nThe first chapter sets the foundation by introducing what RL is and where it fits in the larger context of machine learning. It covers key terminology and ideas, such as:\n\nThe Concept of Agents: At its core, RL is about agents taking actions in an environment to maximise some notion of cumulative reward.\nValue and Reward Functions: These are crucial concepts in RL. Value functions help an agent determine the “value” of a state (or state-action pair), while reward functions represent the feedback from the environment based on the agent’s actions.\nHistory and Context: The chapter also touches upon the history of RL, tying it back to the roots of AI, psychology, and neuroscience, showing how RL is not just a computational concept but inspired by how living beings learn to interact with the world.\n\n\n\nChapter 2: Multi-Armed Bandits\nThis chapter dives into one of the simplest forms of reinforcement learning problems—the multi-armed bandit. If you’ve never heard of a multi-armed bandit, imagine walking into a casino with slot machines (or “bandits”), each with different probabilities of paying out. Your goal is to figure out which machine to play to maximise returns, balancing exploration (trying out different machines) with exploitation (sticking to the best-performing machine). Techniques covered include:\n\nEpsilon-Greedy Strategy: A straightforward approach that allows for both exploitation of known rewards and exploration of potentially better options. With a small probability, you pick a random option; otherwise, you go with the current best.\nUpper Confidence Bound (UCB): A more sophisticated method that considers uncertainty in estimates and prioritises options that could yield higher rewards while balancing exploration and exploitation.\nGradient Bandit Algorithms: Instead of estimating action values, this approach focuses on learning preferences over actions and updating them in a way that encourages the agent to try higher-reward options more frequently.\n\n\n\nChapter 3: Markov Decision Processes (MDPs)\nChapter 3 builds on foundational concepts to introduce Markov Decision Processes (MDPs), which form the backbone of most RL problems. An MDP provides a mathematical framework for modelling decision-making in situations where outcomes are partly random and partly under the agent’s control. Key ideas include:\n\nThe Agent-Environment Interface: The MDP framework views learning as a loop where an agent takes actions that influence its state within an environment, and the environment provides feedback via rewards.\nGoals and Rewards: The chapter emphasises the importance of designing appropriate reward signals. A reward isn’t just about getting the agent to learn to achieve a goal; it’s also about ensuring it learns to achieve it in the “right” way. Proper reward design plays a significant role in guiding the agent’s learning and behaviour."
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#diving-into-algorithmic-trading",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#diving-into-algorithmic-trading",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "Diving into Algorithmic Trading",
    "text": "Diving into Algorithmic Trading\nAfter reading through the first three chapters above, I found myself at a crossroads—deciding what to study next. Reinforcement learning was (and still is) fascinating, but I wanted to apply some of the concepts more practically. One of my main goals is to build an algorithmic trading system, and I realised that focusing purely on theory before diving in wasn’t the most effective approach. There’s a saying that you learn best by doing, and I wanted to embrace that.\nRather than waiting to learn everything I “needed” before getting started, I decided to just jump in, get my hands dirty, and start building. The theoretical learning will always be there, but there’s nothing like a hands-on project to test, apply, and deepen your understanding."
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#building-my-own-algorithmic-trading-system-a-journey-so-far",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#building-my-own-algorithmic-trading-system-a-journey-so-far",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "Building My Own Algorithmic Trading System: A Journey So Far",
    "text": "Building My Own Algorithmic Trading System: A Journey So Far\nI had previously built a basic framework for a trading system, so I decided to start improving on that. It wasn’t the most polished code, but it was a good place to start. The system essentially:\n\nLoaded 1-Minute Stock Price Data into Polars: Polars is a data manipulation library similar to Pandas but written in Rust, which makes it extremely fast for handling large datasets.\nTransformed the Data: Within Polars, I manipulated stock data to create signals for a trading strategy—adding indicators, defining conditions for entry and exit, and so on.\nExported Data to Numpy Arrays: To efficiently simulate trades, I exported data to Numpy arrays and looped through each row, as if the trades were happening live.\nOutput and Visualisation: Finally, I collected trades and outcomes in a DataFrame for analysis and visualisation.\n\n\nWhy Polars?\nThe choice to use Polars was strategic. One of its standout features is lazy evaluation, which allows it to optimise processing. For example, say you load 20 years of stock price data, manipulate it, and only need the last year for analysis. Polars will evaluate these operations at the last possible moment, potentially avoiding the need to load the first 19 years into memory. It also optimises operations across multiple threads, offering significant performance boosts when working with large datasets—essential for backtesting trading strategies over extensive periods."
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#the-learning-curve-insights-and-challenges",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#the-learning-curve-insights-and-challenges",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "The Learning Curve: Insights and Challenges",
    "text": "The Learning Curve: Insights and Challenges\n\nRefactoring for Modularity\nThe first step was to clean up the code for better organisation and modularity. Initially, much of the backtesting logic was intertwined with strategy-specific details, so I aimed to decouple these. Now, each strategy is a contained function, which can be passed as an argument to a generalised backtesting function. This separation allowed me to:\n\nIsolate Strategy Implementation: Define the indicators, entry and exit rules, take profit (TP), and stop loss (SL) within each strategy.\nGeneralise Backtesting Logic: Simulate trades based on any strategy provided, improving code reusability and ensuring consistency for both backtesting and future live trading.\n\n\n\nBacktesting with 1-Minute Data\nAfter restructuring the code, I backtested a simple strategy on the last 10 years of 1-minute data from the NDX. Initially, each backtest took around 30 seconds to complete—a significant delay when running multiple tests. My goal was to reduce this to as close to 1 second as possible.\nThe backtesting process was:\n\nLoad the Data: Import stock price data at 1-minute intervals.\nRun Strategy through Backtest: Feed the strategy function into the backtesting function, along with the data and any relevant parameters.\nStrategy Logic: Calculate indicators, such as a 30-period exponential moving average (EMA) on the 5-minute timeframe, and define entry/exit rules (e.g., entry signal if the close price is above EMA, exit if it drops below).\nTP/SL Columns: Define take profit and stop loss levels (e.g., TP at 5% above close price, SL at 5% below), and output a DataFrame with the original data and added columns for indicators, signals, and TP/SL levels.\n\n\n\nBalancing Vectorisation and Looping\nInitially, I tried a vectorised approach to find the next entry, exit, or TP/SL hit, isolating each trade’s range. If a TP/SL was hit before the exit signal, the trade would close; if not, it would close at the exit. This approach worked partially but struggled when accounting for dependent trade sequences. For example, a trade entered at 8am might exit at 9am due to hitting a stop loss, but another entry signal at 9:05am might trigger a re-entry.\nEventually, I adopted a hybrid approach: exporting all columns from Polars to Numpy arrays and iterating through each row to simulate trades sequentially. Using Numba—a high-performance Python compiler—I could speed up this process dramatically, reducing the backtesting time to just under 1 second.\n\nStrategy Manipulation & Numpy Export: About 0.6 seconds.\nLooping through Data in Numba: A mere 0.002 seconds per backtest.\n\nBy carefully optimising data processing and the timing of Polars evaluations, I managed to achieve my goal, making it possible to iterate quickly on strategy ideas."
  },
  {
    "objectID": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#looking-ahead-diving-deeper-into-quantitative-trading",
    "href": "posts/2024-09-26-intro-to-algorithmic-trading/index.html#looking-ahead-diving-deeper-into-quantitative-trading",
    "title": "20 Days of Exploration: What I’ve Been Up To",
    "section": "Looking Ahead: Diving Deeper into Quantitative Trading",
    "text": "Looking Ahead: Diving Deeper into Quantitative Trading\nWhile I was able to backtest a single strategy in under a second, I started wondering: what if I want to test a strategy on thousands of stocks at once? Simply repeating this process for 4,000 stocks could take over an hour to complete.\nI began exploring whether I could load all the data into one massive DataFrame or break it into chunks for efficient processing. The first step was creating 4,000 stock data files. I took a single file with 20 years of 1-minute AAPL stock data (around 60MB as a Parquet file), randomly altered values, and wrote new files. However, I quickly realised I didn’t have enough local storage. Writing these files to an external USB3 SSD was significantly slower, raising questions about the feasibility of reading such large volumes of data quickly.\nThe scale—over 250GB—also brought into question how I’d handle the memory limitations of my machine (a modest 8GB of RAM). Around this time, I stumbled upon Python for Algorithmic Trading Cookbook, which discusses using ArcticDB, SQLite, and HDF5 for storing and accessing large datasets. This made me realise that my current approach of using Parquet files and Polars might not be scalable.\n\nExploring New Storage Approaches\nMy current focus is on researching these alternative storage solutions and their implications for my system. Before investing too heavily into one method, I want to explore various options to find the best fit for efficient backtesting and live trading. There’s a lot to learn, and I’m excited to dive in and share what I discover.\n\n\nEmbracing the Learning Process\nThe past 20 days have been a whirlwind of learning, coding, and adapting to new challenges. Though my journey has diverged from my initial plan, the hands-on experience has deepened my understanding of algorithmic trading, data manipulation, and backtesting optimisation. From exploring the inner workings of Polars to speeding up backtesting with Numba, I’ve discovered the importance of diving into practical challenges headfirst.\nThe next phase is to dive deeper into scalable data storage, refine backtesting across larger datasets, and ensure my approach is robust enough for live trading. I’m excited to share this evolving journey with you, and if you have any thoughts, questions, or tips based on your own experience, please reach out—I’d love to learn together!\nThank you for reading, you can find me on X, and stay tuned for more updates!"
  }
]